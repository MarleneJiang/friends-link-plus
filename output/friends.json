{
    "friends": [
        {
            "name": "戴兜~",
            "description": "daidr",
            "avatar": "https://avatars.githubusercontent.com/u/18638914?v=4",
            "url": "https://daidr.me",
            "rss": "https://daidr.me/feed"
        },
        {
            "name": "Bird",
            "description": "aFlyBird0",
            "avatar": "https://avatars.githubusercontent.com/u/36830265?v=4",
            "url": "https://blog.aflybird.cn/",
            "rss": "https://blog.aflybird.cn/index.xml"
        },
        {
            "name": "NX",
            "description": "这家伙真勤奋，什么都留下了",
            "avatar": "https://nickxu.me/static/favicon.jpg",
            "url": "https://nickxu.me/",
            "rss": "https://nickxu.me/rss2.xml"
        },
        {
            "name": "柏喵Sakura",
            "description": "过气 emo 师傅",
            "avatar": "https://avatars.githubusercontent.com/u/38121125?v=4",
            "url": "https://baimeow.cn/",
            "rss": "https://service-rcg8qv8r-1253828577.sh.apigw.tencentcs.com/release/?url=https://baimeow.cn/index.xml\u0026filter=^(?!.*(?:lives|about|friends)).*$"
        },
        {
            "name": "Marlene",
            "description": "\u003c归零人生\u003e",
            "avatar": "https://avatars.hdu-cs.wiki/MarleneJiang",
            "url": "https://blog.marlene.top/",
            "rss": "https://blog.marlene.top/index.php/feed/rss/category/develop/"
        },
        {
            "name": "ek1ng",
            "description": "Hidden Gem",
            "avatar": "https://avatars.hdu-cs.wiki/ek1ng",
            "url": "https://ek1ng.com/",
            "rss": "https://ek1ng.com/atom.xml"
        },
        {
            "name": "Atom",
            "description": "aka asjdf",
            "avatar": "https://avatars.githubusercontent.com/u/22193008?v=4",
            "url": "https://www.homeboyc.cn/",
            "rss": "https://homeboyc.cn/index.xml"
        }
    ],
    "posts": [
        {
            "Title": "Golang 性能调优速查笔记",
            "Author": "Atom",
            "Date": "2023-07-24",
            "Content": "# 技巧 unsafe转换字符串/字节切片的技巧 字符串 -\u003e 字节切片：*(*[]byte)(unsafe.Pointer(\u0026s)) 缓冲区不能修改，否则 go 会panic！ 字节切片 -\u003e 字符串：*(*string)(unsafe.Pointer(\u0026buf)) 重用缓冲区 复位缓冲器 bytes.Buffer.Reset buf = buf[:0] 尽可能直接分配所需大小的数组 清空Map",
            "PostURL": "https://homeboyc.cn/blog/golang-%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E9%80%9F%E6%9F%A5%E7%AC%94%E8%AE%B0/",
            "AuthorURL": "https://www.homeboyc.cn/"
        },
        {
            "Title": "把“用VSCode打开”按钮加入MacOS右键菜单",
            "Author": "Atom",
            "Date": "2023-07-24",
            "Content": "打开自动操作新建文稿选择快速操作设置“工作流程收到当前”为文件或文件夹在左上方搜索栏搜索“运行” -》 找到“运行 Shell 脚本” 并将其拖入右侧 -》 将下方脚本填入文本框for f in \"$@\"; do open -a 'Visual Studio Code' \"$f\" done Copy 设置“传递输入”为作为自变量保存为Open in Visual Studio Code",
            "PostURL": "https://homeboyc.cn/blog/%E6%8A%8A%E7%94%A8vscode%E6%89%93%E5%BC%80%E6%8C%89%E9%92%AE%E5%8A%A0%E5%85%A5macos%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95/",
            "AuthorURL": "https://www.homeboyc.cn/"
        },
        {
            "Title": "java-sec-code 代码审计靶场题解",
            "Author": "ek1ng",
            "Date": "2023-07-20",
            "Content": "这个靶场包含了各类基本漏洞在java语言上的场景以及java安全特有的JNDI注入，反序列化，表达式注入等等，并且给出了相关的利用手段和修复方案。java-sec-code搭建环境可以用Docker搭建，不过想了想不太熟练java的包管理和web server部署这一套，并且本地起相比于容器也方便调试，于是决定本地起一份。由于我是archlinux，包管理安装的都是最新的jdk版本，靶场的jdk版",
            "PostURL": "https://www.ek1ng.com/java-sec-code.html",
            "AuthorURL": "https://ek1ng.com/"
        },
        {
            "Title": "分布式系统测试工具 muxy 初探",
            "Author": "Atom",
            "Date": "2023-07-17",
            "Content": "# 前言 本篇文章主要简单介绍分布式系统测试工具 muxy 工具，在介绍前，我想先谈谈分布式系统测试。# Coding is easier than testing 编程比测试简单。我认为一个程序你把它写出来不是最难的，把它测好才是最难的。真的这么夸张吗？ 我想从一个简单的 HelloWorld 程序来谈谈一个系统的稳定运行所需要的条件。# 一个普通的 HelloWorld 我们需要考虑来自以",
            "PostURL": "https://homeboyc.cn/blog/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7-muxy-%E5%88%9D%E6%8E%A2/",
            "AuthorURL": "https://www.homeboyc.cn/"
        },
        {
            "Title": "CrewCTF 2023 Web Writeup",
            "Author": "ek1ng",
            "Date": "2023-07-14",
            "Content": "环境还在，赛后看看题，一共四道Web，都挺有意思的。sequence_galleryDo you like sequences?http://sequence-gallery.chal.crewc.tf:8080/ 123456789101112131415sequence = request.args.get('sequence', None)if sequence is None:    re",
            "PostURL": "https://www.ek1ng.com/2023CrewCTFWP.html",
            "AuthorURL": "https://ek1ng.com/"
        },
        {
            "Title": "使用 GitHub Actions Cache 加快 Workflow",
            "Author": "Bird",
            "Date": "2023-07-08",
            "Content": "简单讲讲 GitHub Actions 的 Cache 功能，使用方式，以及探讨浅层的设计思想。虽然本文是我博客中为数不多的「教程」类文章，但我还是会侧重逻辑与思考的角度来讲述。详细教程请查看，GitHub Actions Cache 官方文档。",
            "PostURL": "https://blog.aflybird.cn/2023/07/use-github-actions-cache-to-speed-up-workflow/",
            "AuthorURL": "https://blog.aflybird.cn/"
        },
        {
            "Title": "『OSPP2023』我与 OSPP 的故事 —— 从听闻到中选",
            "Author": "NX",
            "Date": "2023-06-30",
            "Content": "6月26日下午3点，OSPP2023 中选结果正式发布，全球共有 1486 人成功申请，最终中选人数为 504 人鄙人非常荣幸地成为了这 504 个幸运儿的一份子，特撰此文，记录 我与 OSPP 的故事 —— 从听闻到中选当然，我也希望这篇博客能够吸引更多人参与开源，为开源项目做出自己的贡献给「杭电助手」打点小广告本次开源之夏活动，杭州电子科技大学共中选 13 人，其中 8 人来自杭电助手杭助本次",
            "PostURL": "https://nickxu.me/2023/06/my-story-with-OSPP-from-hearing-to-being-selected.html",
            "AuthorURL": "https://nickxu.me/"
        },
        {
            "Title": "云原生安全分享会材料",
            "Author": "ek1ng",
            "Date": "2023-06-28",
            "Content": "这是一篇用于给协会小学弟们分享的文章，粗略从各个角度讲了一讲，有任何问题都欢迎联系我交流，email：ek1ng@qq.com。基础知识🧀在开始之前，你需要能够基本掌握Docker和Kubernetes的使用。基本使用推荐看官方文档，配合一些教程动手尝试。https://www.docker.com/Docker 能区分镜像/容器，能基本使用命令，能写Dockerfile，粗略了解原理即可。htt",
            "PostURL": "https://www.ek1ng.com/cloudsecurity.html",
            "AuthorURL": "https://ek1ng.com/"
        },
        {
            "Title": "开源之旅——OSPP",
            "Author": "Marlene",
            "Date": "2023-06-27",
            "Content": "声明：以下内容仅代表本人观点，具有固有局限性，请辩证看待。任何有问题的地方也恳请指出。开源是什么我一直都认为开源是未来的趋势。用户创作的时代已经到来，作为一名开发者，手里握着强大的武器，个性化的创造自然不在话下。用户创作的目的不是孤芳自赏，而是自媒体式的分享。那么业务、框架的开发与不是自我消化，开源分享或许能够获得更大收益。个人的力量始终有限，我们不是大公司，技术在内部使用也能够逐渐完善。很多内容",
            "PostURL": "https://blog.marlene.top/index.php/develop/85.html",
            "AuthorURL": "https://blog.marlene.top/"
        },
        {
            "Title": "请还国内开源活动一片净土",
            "Author": "Bird",
            "Date": "2023-06-26",
            "Content": "置顶声明：这篇博客我只发在了自己的独立博客、朋友圈和空间，没有发到其他的平台，没想到会有这么多的阅读量，所以必须要写个声明，保护一下好人：我不想文中涉及的社区，尤其是背后的公司受到损失。我同样也不代表任何团体与公司，不受任何利益。如果真的要对这个社区盖棺定论的话，我觉得这个社区的氛围，是非常学生友好，欢迎开源的。真的非常非常没话说，很热情积极与开放。首先是，社区举办了 学生开发者活动，一",
            "PostURL": "https://blog.aflybird.cn/2023/06/please-stop-fucking-open-source-activities-in-china/",
            "AuthorURL": "https://blog.aflybird.cn/"
        },
        {
            "Title": "『算法拾遗』二叉树（Binary Tree）",
            "Author": "NX",
            "Date": "2023-06-17",
            "Content": "大概复习了一遍只能等期末考试后再好好整理了（",
            "PostURL": "https://nickxu.me/posts/281.html",
            "AuthorURL": "https://nickxu.me/"
        },
        {
            "Title": "Go语言整体替换式Map的Lock-Free实现",
            "Author": "Bird",
            "Date": "2023-06-16",
            "Content": "今天来分享一个写业务过程中，一种特殊场景下的 Lock-Free Map 的实现。 来，我们先抛开看了三遍可能都还看不懂的题目，讲讲故事的背景。 背景/需求 假设我们需要一",
            "PostURL": "https://blog.aflybird.cn/2023/06/go-lock-free-map-with-replace/",
            "AuthorURL": "https://blog.aflybird.cn/"
        },
        {
            "Title": "『算法拾遗』跳表（Skip List）",
            "Author": "NX",
            "Date": "2023-06-13",
            "Content": "别急，这周内会写哇我感觉事情有点多，然后我现在主要是要准备面试的内容这东西只能说有空再写了",
            "PostURL": "https://nickxu.me/posts/280.html",
            "AuthorURL": "https://nickxu.me/"
        },
        {
            "Title": "『算法拾遗』重学主流排序算法",
            "Author": "NX",
            "Date": "2023-06-13",
            "Content": "衡量排序算法的好坏时间复杂度包含最好情况、最坏情况和平均情况数据有序度不同的影响空间复杂度是否是原地排序稳定性排序后，相同元素之间的顺序是否会改变O( n^2 )冒泡排序（Bubble Sort）依次比较相邻的元素，如果顺序错误，则交换它们。每轮排序将最大（或最小）的元素“冒泡”到正确的位置简单易懂，但效率较低，不适用于大规模数据排序过程初始化待排序数组，设为 arr ，数组长度为 n外层循环：重",
            "PostURL": "https://nickxu.me/posts/sorting-algorithm.html",
            "AuthorURL": "https://nickxu.me/"
        },
        {
            "Title": "开源之夏2023申请书——优化CubeFS容器化部署",
            "Author": "Bird",
            "Date": "2023-06-03",
            "Content": "因为没确定的细节太多了，以及主要的精力放在了和 Mentor 沟通上。所以申请书写得很粗糙和仓促，后续有机会尽量再写个新版。 以下申请书正文： 一、课题背景与",
            "PostURL": "https://blog.aflybird.cn/2023/06/ospp-2023-proposal-cubefs/",
            "AuthorURL": "https://blog.aflybird.cn/"
        },
        {
            "Title": "后端层与层传递结构体时自动转换类型",
            "Author": "NX",
            "Date": "2023-06-02",
            "Content": "未完成7 月 11 日更：在后端层与层传递的时候，很多情况下都需要手动把一个结构体的内容搬到另一个结构体里面，也可能会做一下简单的转换这时候就可以用 jinzhu 的 https://github.com/jinzhu/copier我很早就听说了这个东西，但是一直没敢用，毕竟小项目东西也不多，然后自己手动搬一下比较稳妥，怕会有什么问题但是后面变大了之后感觉适合 copier 的场景更多了，比如一个",
            "PostURL": "https://nickxu.me/posts/278.html",
            "AuthorURL": "https://nickxu.me/"
        },
        {
            "Title": "后端发送 lua 脚本给 Redis 执行",
            "Author": "NX",
            "Date": "2023-06-02",
            "Content": "未完成7 月 11 日更：之前在交流的时候发现了一个很巧的方法，就是在执行复杂 Redis 操作的时候，可以发一个 lua 脚本过去细节记不清了，大概就是你一句一句写的话，效率是不及直接发一个脚本过去高的具体的我还没试，等试了之后再看看👀",
            "PostURL": "https://nickxu.me/posts/277.html",
            "AuthorURL": "https://nickxu.me/"
        },
        {
            "Title": "如何在一个仓库中同时开发前后端项目",
            "Author": "NX",
            "Date": "2023-06-01",
            "Content": "如图，今天在群里问了个小问题TLDR; 直接说结论吧小项目直接开子目录，然后可以分别独立打包或者使用 go embed不同分支的方法应该没必要用如果想做成两个独立项目就用 submodulegpt 对 submodule 的介绍Git 的 Submodule 是一种在一个 Git 仓库中嵌套使用另一个 Git 仓库的机制。它允许你将一个 Git 仓库作为子项目嵌入到另一个 Git 仓库中，并且能够",
            "PostURL": "https://nickxu.me/posts/276.html",
            "AuthorURL": "https://nickxu.me/"
        },
        {
            "Title": "BGP 组网，DN11 与 VidarNetwork 的并网试验",
            "Author": "柏喵Sakura",
            "Date": "2023-06-01",
            "Content": "DN11配网第二期，接上文 “使用 Bird2 配置 WireGuard + OSPF 实现网络的高可用”，这是一篇用于 DN11 的 BGP 配置教程随着 DN11 的扩大，使用 OSPF 进行集中管理已经变得麻烦起来了，此外还能看到一堆隧道IP污染路由表也有不少人手上有多个内网，不得不打破 DN11 原先一个人使用一个/24网段的约定近期又在考虑和 VidarNetwork 并网的事情，",
            "PostURL": "https://baimeow.cn/posts/dn11/configurebgp/",
            "AuthorURL": "https://baimeow.cn/"
        },
        {
            "Title": "『算法拾遗』链表（Linked List）",
            "Author": "NX",
            "Date": "2023-05-31",
            "Content": "这两天在复习链表，我一想，这链表这么简单的东西还有什么复习的，简单过一遍不就行了然而马上打脸，有些题目我居然还写不出来（乐理论基础先来点你肯定知道的东西，简单过一遍是什么如图所示，链表是一种链式结构，以最简单的单链表为例：1234type ListNode struct {    Val  int    Next *ListNode}也就是头节点指向下一个节点，然后下一个节点再指向下一个节点，如果",
            "PostURL": "https://nickxu.me/posts/275.html",
            "AuthorURL": "https://nickxu.me/"
        }
    ]
}